services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
      - WDS_SOCKET_PATH=/ws
    stdin_open: true
    tty: true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: php-backend
    ports:
      - "8080:80"
    volumes:
      - ./backend/src:/var/www/html
    environment:
      # Database connection environment variables
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=appdb
      - DB_USERNAME=appuser
      - DB_PASSWORD=apppassword
    depends_on:
      - database

  database:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "appuser", "-d", "appdb"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: